{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onTodoSelection","className","map","id","title","completed","isSelected","cn","type","onClick","TodoFilter","onSelectionCategory","searchQuery","onQueryChange","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","onCloseModal","useState","selectedUser","setSelectedUser","loadUser","userId","catch","error","Error","useEffect","href","email","name","App","setTodos","setSelectedTodoId","selectedFilter","setSelectedFilter","setSearchQuery","find","visibleTodos","filter","todo","lowerTodoTitle","toLowerCase","lowerQuery","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.222dd91a.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodoId: number,\n  onTodoSelection: (id: number) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onTodoSelection,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(({ id, title, completed }) => {\n        const isSelected = selectedTodoId === id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': isSelected,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            {completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n\n              )\n              : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn(\n                { 'has-text-danger': !completed },\n                { 'has-text-success': completed },\n              )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className={cn('button',\n                  { 'is-link': isSelected })}\n                type=\"button\"\n                onClick={() => onTodoSelection(id)}\n              >\n                <span className=\"icon\">\n                  {!isSelected\n                    ? (<i className=\"far fa-eye\" />)\n                    : (<i className=\"far fa-eye-slash\" />)}\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ninterface Props {\n  onSelectionCategory: (value: string) => void;\n  searchQuery: string;\n  onQueryChange: (value: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSelectionCategory,\n  searchQuery,\n  onQueryChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => onSelectionCategory(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={searchQuery}\n        onChange={(event) => onQueryChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {searchQuery && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQueryChange('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ninterface Props {\n  selectedTodo: Todo | null;\n  onCloseModal: () => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onCloseModal,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const loadUser = () => {\n    if (selectedTodo?.id) {\n      getUser(selectedTodo.userId)\n        .then(setSelectedUser)\n        .catch(error => {\n          throw new Error(error);\n        });\n    }\n  };\n\n  useEffect(\n    () => {\n      loadUser();\n    },\n    [selectedUser],\n  );\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const selectedTodo = todos.find(({ id }) => id === selectedTodoId) || null;\n\n  const closeModalWindow = () => {\n    setSelectedTodoId(0);\n  };\n\n  const handleSelectionFilter = (value: string) => {\n    setSelectedFilter(value);\n  };\n\n  const handleQuery = (value: string) => {\n    setSearchQuery(value);\n  };\n\n  const handleSelectionTodo = (value: number) => {\n    setSelectedTodoId(value);\n  };\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  let visibleTodos = todos.filter(todo => {\n    switch (selectedFilter) {\n      case 'all':\n        return true;\n\n      case 'active':\n        return !todo.completed;\n\n      case 'completed':\n        return todo.completed;\n\n      default:\n        return 0;\n    }\n  });\n\n  visibleTodos = visibleTodos.filter(todo => {\n    const lowerTodoTitle = todo.title.toLowerCase();\n    const lowerQuery = searchQuery.toLowerCase();\n\n    return lowerTodoTitle.includes(lowerQuery);\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSelectionCategory={handleSelectionFilter}\n                searchQuery={searchQuery}\n                onQueryChange={handleQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                selectedTodoId={selectedTodoId}\n                onTodoSelection={handleSelectionTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodoId\n      && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onCloseModal={closeModalWindow}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}